# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: consistentHashing.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17\x63onsistentHashing.proto\x12\x11\x63onsistentHashing\"\x1c\n\x0e\x41\x64\x64NodeRequest\x12\n\n\x02ip\x18\x01 \x01(\t\"#\n\x0f\x41\x64\x64NodeResponse\x12\x10\n\x08\x65rrormsg\x18\x01 \x01(\t\"\x19\n\nGetRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\"\x1c\n\x0bGetResponse\x12\r\n\x05value\x18\x02 \x01(\t\"(\n\nPutRequest\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\"\x1f\n\x0bPutResponse\x12\x10\n\x08\x65rrormsg\x18\x01 \x01(\t\"$\n\x06KVpair\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t\":\n\x0fGetRingResponse\x12\'\n\x04ring\x18\x01 \x03(\x0b\x32\x19.consistentHashing.KVpair\"\r\n\x0b\x45mptyParams2\x97\x03\n\x11\x43onsistentHashing\x12\x46\n\x03Get\x12\x1d.consistentHashing.GetRequest\x1a\x1e.consistentHashing.GetResponse\"\x00\x12\x46\n\x03Put\x12\x1d.consistentHashing.PutRequest\x1a\x1e.consistentHashing.PutResponse\"\x00\x12R\n\x07\x41\x64\x64Node\x12!.consistentHashing.AddNodeRequest\x1a\".consistentHashing.AddNodeResponse\"\x00\x12M\n\nRemoveNode\x12\x1d.consistentHashing.PutRequest\x1a\x1e.consistentHashing.PutResponse\"\x00\x12O\n\x07GetRing\x12\x1e.consistentHashing.EmptyParams\x1a\".consistentHashing.GetRingResponse\"\x00\x42\x30\n\x18io.grpc.examples.leveldbB\x0cLevelDBProtoP\x01\xa2\x02\x03HLWb\x06proto3')



_ADDNODEREQUEST = DESCRIPTOR.message_types_by_name['AddNodeRequest']
_ADDNODERESPONSE = DESCRIPTOR.message_types_by_name['AddNodeResponse']
_GETREQUEST = DESCRIPTOR.message_types_by_name['GetRequest']
_GETRESPONSE = DESCRIPTOR.message_types_by_name['GetResponse']
_PUTREQUEST = DESCRIPTOR.message_types_by_name['PutRequest']
_PUTRESPONSE = DESCRIPTOR.message_types_by_name['PutResponse']
_KVPAIR = DESCRIPTOR.message_types_by_name['KVpair']
_GETRINGRESPONSE = DESCRIPTOR.message_types_by_name['GetRingResponse']
_EMPTYPARAMS = DESCRIPTOR.message_types_by_name['EmptyParams']
AddNodeRequest = _reflection.GeneratedProtocolMessageType('AddNodeRequest', (_message.Message,), {
  'DESCRIPTOR' : _ADDNODEREQUEST,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.AddNodeRequest)
  })
_sym_db.RegisterMessage(AddNodeRequest)

AddNodeResponse = _reflection.GeneratedProtocolMessageType('AddNodeResponse', (_message.Message,), {
  'DESCRIPTOR' : _ADDNODERESPONSE,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.AddNodeResponse)
  })
_sym_db.RegisterMessage(AddNodeResponse)

GetRequest = _reflection.GeneratedProtocolMessageType('GetRequest', (_message.Message,), {
  'DESCRIPTOR' : _GETREQUEST,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.GetRequest)
  })
_sym_db.RegisterMessage(GetRequest)

GetResponse = _reflection.GeneratedProtocolMessageType('GetResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRESPONSE,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.GetResponse)
  })
_sym_db.RegisterMessage(GetResponse)

PutRequest = _reflection.GeneratedProtocolMessageType('PutRequest', (_message.Message,), {
  'DESCRIPTOR' : _PUTREQUEST,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.PutRequest)
  })
_sym_db.RegisterMessage(PutRequest)

PutResponse = _reflection.GeneratedProtocolMessageType('PutResponse', (_message.Message,), {
  'DESCRIPTOR' : _PUTRESPONSE,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.PutResponse)
  })
_sym_db.RegisterMessage(PutResponse)

KVpair = _reflection.GeneratedProtocolMessageType('KVpair', (_message.Message,), {
  'DESCRIPTOR' : _KVPAIR,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.KVpair)
  })
_sym_db.RegisterMessage(KVpair)

GetRingResponse = _reflection.GeneratedProtocolMessageType('GetRingResponse', (_message.Message,), {
  'DESCRIPTOR' : _GETRINGRESPONSE,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.GetRingResponse)
  })
_sym_db.RegisterMessage(GetRingResponse)

EmptyParams = _reflection.GeneratedProtocolMessageType('EmptyParams', (_message.Message,), {
  'DESCRIPTOR' : _EMPTYPARAMS,
  '__module__' : 'consistentHashing_pb2'
  # @@protoc_insertion_point(class_scope:consistentHashing.EmptyParams)
  })
_sym_db.RegisterMessage(EmptyParams)

_CONSISTENTHASHING = DESCRIPTOR.services_by_name['ConsistentHashing']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030io.grpc.examples.leveldbB\014LevelDBProtoP\001\242\002\003HLW'
  _ADDNODEREQUEST._serialized_start=46
  _ADDNODEREQUEST._serialized_end=74
  _ADDNODERESPONSE._serialized_start=76
  _ADDNODERESPONSE._serialized_end=111
  _GETREQUEST._serialized_start=113
  _GETREQUEST._serialized_end=138
  _GETRESPONSE._serialized_start=140
  _GETRESPONSE._serialized_end=168
  _PUTREQUEST._serialized_start=170
  _PUTREQUEST._serialized_end=210
  _PUTRESPONSE._serialized_start=212
  _PUTRESPONSE._serialized_end=243
  _KVPAIR._serialized_start=245
  _KVPAIR._serialized_end=281
  _GETRINGRESPONSE._serialized_start=283
  _GETRINGRESPONSE._serialized_end=341
  _EMPTYPARAMS._serialized_start=343
  _EMPTYPARAMS._serialized_end=356
  _CONSISTENTHASHING._serialized_start=359
  _CONSISTENTHASHING._serialized_end=766
# @@protoc_insertion_point(module_scope)
